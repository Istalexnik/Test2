@inherits LayoutComponentBase
@inject SecureStorageService SecureStorageService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="page d-flex flex-column min-vh-100">
    <!-- Status Bar Safe Area -->
    <div class="status-bar-safe-area"></div>

    <!-- Top App Bar -->
    <header class="top-bar navbar navbar-light fixed-top">
        <div class="container-fluid d-flex justify-content-between">
            <span class="navbar-brand mx-auto text-center">App Name</span>

            <!-- Show Logout button only when authenticated -->
            <AuthorizeView>
                <Authorized>
                    <button @onclick="Logout" class="btn btn-outline-danger btn-sm d-flex align-items-center">
                        <i class="bi bi-box-arrow-right me-2"></i>
                        <span>Logout</span>
                    </button>
                </Authorized>
            </AuthorizeView>
        </div>
    </header>

    <!-- Main Content -->
    <main class="flex-grow-1 d-flex flex-column mt-5 pt-4">
        <article class="content container px-4">
            @Body
        </article>
    </main>

    <!-- Show Register and Login links only when not authenticated -->
    <AuthorizeView>
        <NotAuthorized>
    <!-- Bottom Navigation -->
    <nav class="navbar navbar-light bg-light fixed-bottom">
        <div class="container-fluid d-flex justify-content-around">


                    <NavLink class="nav-item text-center" href="/register" Match="NavLinkMatch.All" aria-label="Register">
                        <i class="bi bi-person-add"></i>
                        <span>Register</span>
                    </NavLink>
                    <NavLink class="nav-item text-center" href="/login" Match="NavLinkMatch.All" aria-label="Login">
                        <i class="bi bi-key"></i>
                        <span>Login</span>
                    </NavLink>
        </div>
    </nav>
                    </NotAuthorized>
            </AuthorizeView>
</div>

@code {
 
    private void Logout()
    {
        SecureStorageService.RemoveTokens();

        // Notify AuthenticationStateProvider
        if (AuthenticationStateProvider is SecureStorageAuthenticationStateProvider authProvider)
        {
            authProvider.NotifyUserLogout();
        }

        Navigation.NavigateTo("/login", true);
    }
}

