@page "/dashboard"
@inject IHttpClientFactory HttpClientFactory
@inject ILogger<Dashboard> Logger


<h3>Dashboard</h3>

<p>Welcome to your dashboard!</p>

@code {
    private HttpClient Http => HttpClientFactory.CreateClient("AuthorizedClient");

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (!authState.User.Identity?.IsAuthenticated ?? true)
        {
            NavigationManager.NavigateTo("/login", true);
        }


        try
        {
            // Log dashboard initialization
            Logger.LogInformation("Initializing dashboard at {Time}", DateTime.Now);

            var response = await Http.GetAsync("dashboard");

            // Log the response status code
            Logger.LogInformation("Received response for dashboard data: Status Code {StatusCode}", response.StatusCode);

            if (response.IsSuccessStatusCode)
            {
                // Handle successful response
                Logger.LogInformation("Dashboard data loaded successfully.");
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                // Handle unauthorized access
                Logger.LogWarning("Unauthorized access detected. Navigating to login page.");

                var currentPage = Application.Current?.Windows.FirstOrDefault()?.Page as Page;
                if (currentPage != null)
                {
                    await currentPage.DisplayAlert("Session Expired", "Your session has expired. Please log in again.", "OK");
                }

                NavigationManager.NavigateTo("/login");
            }
            else
            {
                // Log the error response
                var errorMessage = await response.Content.ReadAsStringAsync();
                Logger.LogError("Failed to load dashboard data. Status Code: {StatusCode}, Error: {ErrorMessage}", response.StatusCode, errorMessage);

                var currentPage = Application.Current?.Windows.FirstOrDefault()?.Page as Page;
                if (currentPage != null)
                {
                    await currentPage.DisplayAlert("Error", $"An error occurred: {errorMessage}", "OK");
                }
            }
        }
        catch (Exception ex)
        {
            // Log exception details
            Logger.LogError("An error occurred while initializing the dashboard: {Message}", ex.Message);

            var currentPage = Application.Current?.Windows.FirstOrDefault()?.Page as Page;
            if (currentPage != null)
            {
                await currentPage.DisplayAlert("Error", $"An unexpected error occurred: {ex.Message}", "OK");
            }
        }
    }
}
